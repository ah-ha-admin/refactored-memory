description: >
  Install custom versions of Node.js, and optionally NPM/Yarn, in any

  execution environment (Docker/Linux, macOS, machine) that does not have

  it preinstalled.


  Recommendation: It is highly recommended to utilize an environment such as
  Docker with Node preinstalled.
parameters:
  install-yarn:
    default: false
    description: Install Yarn?
    type: boolean
  node-install-dir:
    default: /usr/local
    description: |
      Where should Node.js be installed?
    type: string
  node-version:
    default: ''
    description: >
      Specify the full version tag to install. To install the latest version,
      set the version to `latest`. If unspecified, the version listed in .nvmrc
      will be installed. If no .nvmrc file exists the active LTS version of
      Node.js will be installed by default. For a full list of releases, see the
      following: https://nodejs.org/en/download/releases
    type: string
  yarn-version:
    default: ''
    description: >
      Pick a version of Yarn to install (if no version is specified, the latest
      stable version will be installed):
      https://github.com/yarnpkg/yarn/releases
    type: string
steps:
  - run:
      command: >
        # Only install nvm if it's not already installed

        if command -v nvm &> /dev/null; then
            echo "nvm is already installed. Skipping nvm install.";
        else
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash;
            
            echo 'export NVM_DIR="$HOME/.nvm"' >> "$BASH_ENV";
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" --no-use' >> "$BASH_ENV";
            
            # shellcheck source=/dev/null
            source "$BASH_ENV";
        fi


        # See: https://github.com/nvm-sh/nvm#usage

        if [ "$NODE_PARAM_VERSION" = "latest" ]; then
            # When no version is specified we default to the latest version of Node
            NODE_ORB_INSTALL_VERSION=$(nvm ls-remote | tail -n1 | grep -Eo 'v[0-9]+\.[0-9]+\.[0-9]+')
            nvm install "$NODE_ORB_INSTALL_VERSION" # aka nvm install node. We're being explicit here.
            nvm alias default "$NODE_ORB_INSTALL_VERSION"
        elif [ -n "$NODE_PARAM_VERSION" ] && [ "$NODE_PARAM_VERSION" != "lts" ];
        then
            nvm install "$NODE_PARAM_VERSION"
            nvm alias default "$NODE_PARAM_VERSION"
        elif [ -f ".nvmrc" ]; then
            NVMRC_SPECIFIED_VERSION=$(<.nvmrc)
            nvm install "$NVMRC_SPECIFIED_VERSION"
            nvm alias default "$NVMRC_SPECIFIED_VERSION"
        else
            nvm install --lts
            nvm alias default lts/*
        fi


        echo 'nvm use default &>/dev/null' >> "$BASH_ENV"
      environment:
        NODE_PARAM_VERSION: <<parameters.node-version>>
      name: Install Node.js <<parameters.node-version>>
  - when:
      condition: <<parameters.install-yarn>>
      steps:
        - install-yarn:
            version: <<parameters.yarn-version>>
