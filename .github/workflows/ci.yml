name: CI
on: [push, pull_request]
permissions:
  contents: read
jobs:
  system-libffi:
    # Run on latest MRI with explicit selection of system or builtin libffi
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu, macos, windows ]
        extconfopts: [ --disable-system-libffi, --enable-system-libffi ]
        extconfopts2: [ --disable-libffi-alloc, --enable-libffi-alloc ]
    runs-on: ${{ matrix.os }}-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7

    - if: matrix.os == 'macos'
      run: brew install automake libffi pkg-config

    - if: matrix.os == 'windows' && matrix.extconfopts == '--enable-system-libffi'
      shell: cmd
      run: ridk exec sh -c "pacman --sync --refresh --needed --noconfirm  ${MINGW_PACKAGE_PREFIX}-libffi"
    - run: bundle install
    - run: bundle exec rake libffi
    - run: bundle exec rake compile -- ${{ matrix.extconfopts }} ${{ matrix.extconfopts2 }}
      env:
        # work around misconfiguration of libffi on MacOS with homebrew
        PKG_CONFIG_PATH: ${{ env.PKG_CONFIG_PATH }}:/usr/local/opt/libffi/lib/pkgconfig
    - run: bundle exec rake test
    - run: bundle exec rake types_conf && git --no-pager diff

  specs:
    # Run all specs on all ruby implementations
    # Use automatic libffi selection on MRI
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        ruby: [ 2.3, 2.4, 2.5, 2.6, 2.7, '3.0', 3.1, 3.2, ruby-head, truffleruby-head, jruby-head ]
        exclude:
        - os: windows
          ruby: truffleruby-head
        - os: windows
          ruby: 2.3 # compilation fails
    runs-on: ${{ matrix.os }}-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}

    - run: brew install automake
      if: matrix.os == 'macos'

    - run: bundle install
    - run: bundle exec rake libffi
    - run: bundle exec rake compile

    - run: bundle exec rake test

    - run: bundle exec rake bench:all
      if: ${{ matrix.ruby != 'truffleruby-head' && matrix.ruby != 'jruby-head' }}
      env:
        ITER: 10
name: Continuous Integration

on:
  push:
    branches:
      - master
      - "*-stable"
  pull_request:
    branches:
      - master
      - "*-stable"

jobs:
  ci:
    name: "Run Tests (${{ matrix.label }})"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        include:
          - label: Ruby 2.7
            ruby_version: "2.7"
          - label: Ruby 3.0
            ruby_version: "3.0"
          - label: Ruby 3.1.2
            ruby_version: "3.1.2"
          - label: JRuby 9.4.0.0
            ruby_version: "jruby-9.4.0.0"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: "Set up ${{ matrix.label }}"
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby_version }}
          bundler-cache: true
      - name: Run Minitest based tests
        run: bash script/test
      - name: Run Cucumber based tests
        run: bash script/cucumber
      - name: Generate and Build a new site
        run: bash script/default-site

  xtras:
    name: "${{ matrix.job_name }} (Ruby ${{ matrix.ruby_version }})"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        include:
          - job_name: "Profile Docs Site"
            step_name: "Build and Profile docs site"
            script_file: "profile-docs"
            ruby_version: "2.7"
          - job_name: "Style Check"
            step_name: "Run RuboCop"
            script_file: "fmt"
            ruby_version: "2.7"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: "Set up Ruby ${{ matrix.ruby_version }}"
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby_version }}
          bundler-cache: true
      - name: ${{ matrix.step_name }}
        run: bash script/${{ matrix.script_file }}
name: ci
on:
  push:
    branches:
      - master
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: pip install mkdocs-material
      - run: cd docs; mkdocs gh-deploy --force
import com.microsoft.appcenter.AppCenter;
import com.microsoft.appcenter.analytics.Analytics;
import com.microsoft.appcenter.crashes.Crashes;
[![Deploy Jekyll with GitHub Pages dependencies preinstalled](https://github.com/ah-ha-admin/refactored-memory/actions/workflows/jekyll-gh-pages.yml/badge.svg)](https://github.com/ah-ha-admin/refactored-memory/actions/workflows/jekyll-gh-pages.yml)
Run actions/deploy-pages@v1
Actor: ah-ha-admin
Action ID: 3610059348
Artifact URL: https://pipelines.actions.githubusercontent.com/4KXsrVU1mUOKs7pos5Bk6Fq09D6jySVjT3cpPMvrTyCLYNX7nf/_apis/pipelines/workflows/3610059348/artifacts?api-version=6.0-preview
{"count":1,"value":[{"containerId":1385265,"size":102400,"signedContent":null,"fileContainerResourceUrl":"https://pipelines.actions.githubusercontent.com/4KXsrVU1mUOKs7pos5Bk6Fq09D6jySVjT3cpPMvrTyCLYNX7nf/_apis/resources/Containers/1385265","type":"actions_storage","name":"github-pages","url":"https://pipelines.actions.githubusercontent.com/4KXsrVU1mUOKs7pos5Bk6Fq09D6jySVjT3cpPMvrTyCLYNX7nf/_apis/pipelines/1/runs/1832/artifacts?artifactName=github-pages","expiresOn":"2022-12-04T20:12:07.8712362Z","items":null}]}
Creating deployment with payload:
{
	"artifact_url": "https://pipelines.actions.githubusercontent.com/4KXsrVU1mUOKs7pos5Bk6Fq09D6jySVjT3cpPMvrTyCLYNX7nf/_apis/pipelines/1/runs/1832/artifacts?artifactName=github-pages&%24expand=SignedContent",
	"pages_build_version": "d844251c0b0442681cc87b49a1acb46f9109b099",
	"oidc_token": "***"
}
- name: "Check if user has write access"
    uses: "lannonbr/repo-permission-check-action@2.0.2"
    with:
      permission: "write"
    env:
      GITHUB_TOKEN: ${{github_pat_11A4HPB7A0Q7raD8GNlvUv_HWYZi1lifIsihvvZ6TaXSgfzxpM5

Created deployment for d844251c0b0442681cc87b49a1acb46f9109b099
{"page_url":"https://ah-ha-admin.github.io/refactored-memory/","status_url":"https://api.github.com/repos/ah-ha-admin/refactored-memory/pages/deployment/status/d844251c0b0442681cc87b49a1acb46f9109b099","preview_ur
jobs:
  autofix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cargo fmt
      - uses: autofix-ci/action@40f4f7bccdde208056784fa907921be767412c5f
